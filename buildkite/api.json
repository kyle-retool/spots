{
  "openapi": "3.0.2",
  "info": {
    "title": "Buildkite REST AP",
    "version": "0.0.0"
  },
  "paths": {
    "/v2/organizations": {
      "get": {
        "description": "Returns a paginated list of the user’s organizations.",
        "operationId": "ListOrganizations",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization}": {
      "get": {
        "operationId": "GetAnOrganization",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization}/pipelines": {
      "get": {
        "description": "Returns a paginated list of an organization’s pipelines.",
        "operationId": "ListPipelines",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pipeline"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "YAML pipelines are the recommended way to manage your pipelines. To create a\nYAML pipeline using this endpoint, set the configuration key in your json\nrequest body to an the YAML you want in your pipeline.",
        "operationId": "CreateAYAMLPipeline",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateYAMLPipelineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "201 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pipeline"
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization}/pipelines/{pipeline}": {
      "get": {
        "operationId": "GetAPipeline",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pipeline"
                }
              }
            }
          }
        }
      }
    },
    "/v2/builds": {
      "get": {
        "operationId": "ListAllBuilds",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Build"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization}/builds": {
      "get": {
        "operationId": "ListAllBuildsForOrganization",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Build"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization}/pipelines/{pipeline}/builds": {
      "get": {
        "operationId": "ListAllBuildsForPipeline",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Build"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "CreateABuild",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "201 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Build"
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization}/pipelines/{pipeline}/builds/{build}": {
      "get": {
        "operationId": "GetABuild",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "build",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Build"
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization}/pipelines/{pipeline}/builds/{build}/cancel": {
      "put": {
        "operationId": "CancelABuild",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "build",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Build"
                }
              }
            }
          }
        }
      }
    },
    "/v2/organizations/{organization}/pipelines/{pipeline}/builds/{build}/rebuild": {
      "put": {
        "operationId": "RebuildABuild",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pipeline",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "build",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Build"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Organization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "graphql_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "web_url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "pipelines_url": {
            "type": "string"
          },
          "agents_url": {
            "type": "string"
          },
          "emojis_url": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "graphql_id",
          "url",
          "web_url",
          "name",
          "slug",
          "pipelines_url",
          "agents_url",
          "emojis_url",
          "created_at"
        ]
      },
      "Pipeline": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "graphql_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "graphql_id"
        ]
      },
      "CreateYAMLPipelineRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the pipeline."
          },
          "repository": {
            "type": "string",
            "description": "The repository URL."
          },
          "configuration": {
            "type": "string",
            "description": "The YAML pipeline that consists of the build pipeline steps."
          },
          "branch_configuration": {
            "type": "string",
            "example": "master feature/*",
            "description": "A branch filter pattern to limit which pushed branches trigger builds on this pipeline."
          },
          "cancel_running_branch_builds": {
            "type": "boolean",
            "example": true,
            "default": false,
            "description": "Cancel intermediate builds. When a new build is created on a branch, any previous builds that are running on the same branch will be automatically canceled."
          },
          "cancel_running_branch_builds_filter": {
            "type": "string",
            "example": "develop prs/*",
            "description": "A branch filter pattern to limit which branches intermediate build cancelling applies to."
          },
          "default_branch": {
            "type": "string",
            "example": "master",
            "description": "The name of the branch to prefill when new builds are created or triggered in\nBuildkite. It is also used to filter the builds and metrics shown on the\nPipelines page."
          },
          "description": {
            "type": "string",
            "example": "📦 A testing pipeline",
            "description": "The pipeline description."
          }
        },
        "required": [
          "name",
          "repository",
          "configuration"
        ]
      },
      "Build": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "graphql_id": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "web_url": {
            "type": "string"
          },
          "number": {
            "type": "number",
            "format": "float"
          }
        },
        "required": [
          "id",
          "graphql_id",
          "url",
          "web_url",
          "number"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://api.buildkite.com"
    }
  ]
}